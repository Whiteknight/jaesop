// TAP Test Harness
// Automatically generated by Rosella

$load "rosella/core.pbc";
$load "rosella/harness.pbc";
$load "./t/testlib.pbc";

// Forward declaration of classes.
namespace Rosella {
    class Harness;
    namespace Harness { namespace TestRun { class Factory; }}
    namespace FileSystem { class File; }
}
class JavaScriptStage0File;

// Harness Main. Execute tests in directories and display results.
function harness_main(var args)
{
    var factory = new Rosella.Harness.TestRun.Factory();
    var harness = new Rosella.Harness();
    var view = harness.default_view();

    // Default directories. These are executed if none are specified in args
    if (elements(args) == 0) {
        args = [
            "t/stage0"
        ];
    }

    factory.add_testfile_type("JS Stage 0", class JavaScriptStage0File);
    factory.add_test_dirs("JS Stage 0", args:[flat], 1:[named("recurse")]);
    var run = factory.create();
    view.add_run(run, 0);
    harness.run(run, view);
    view.show_results();
}

// Show help message
function show_help(string program_name)
{
    string msg = sprintf(<<:
winxed %s [<DIRS>]
winxed %s --help
Parrot/Winxed TAP Harness. Execute test suite in folders. If <DIRS> is passed,
execute tests in those directories only. Otherwise, execute tests in default
directories: ( "t/stage0" ).

    <DIRS>      A list of test directories to execute
    --help      Show this help message
:>>
    , [program_name, program_name]);
    say(msg);
}

// Main function. Load in the libraries and run the test, catching errors.
function main[main](var args)
{
    //var rosella = load_packfile("rosella/core.pbc");
    //var(Rosella.initialize_rosella)("harness", "filesystem");
    //var(Rosella.load_bytecode_file)("t/testlib.pbc");
    var(Rosella.Parrot.try_report)(function() {
        string program_name = args.shift();
        if (elements(args) == 1 && args[0] == "--help")
            show_help(program_name);
        else
            harness_main(args);
    });
}

