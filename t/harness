// TAP Test Harness
// Automatically generated by Rosella

$load "rosella/core.pbc";
$load "rosella/harness.pbc";
$load "./t/harnesslib.pbc";

// Forward declaration of classes.
namespace Rosella {
    class Harness;
    namespace Harness { namespace TestRun { class Factory; }}
    namespace FileSystem { class File; }
}
class JavaScriptStage0File;

// Harness Main. Execute tests in directories and display results.
function harness_main(var args)
{
    var harness = new Rosella.Harness();

    // Default directories. These are executed if none are specified in args
    if (elements(args) == 0) {
        args = [
            "t/stage0",
            "t/stage0_runtime"
        ];
    }

    harness.add_testfile_type("t/stage0", class JavaScriptStage0File);
    for (string path in args) {
        var parts = split("_", path);
        if (elements(parts) > 1)
            harness.add_test_dirs("Winxed", path, 1:[named("recurse")]);
        else
            harness.add_test_dirs(string(parts[0]), path, 1:[named("recurse")]);
    }
    harness.setup_test_run(1:[named("sort")]);
    harness.run();
    harness.show_results();
}

// Show help message
function show_help(string program_name)
{
    string msg = sprintf(<<:
winxed %s [<DIRS>]
winxed %s --help
Parrot/Winxed TAP Harness for Jaesop. Execute test suite in folders. If
<DIRS> is passed execute tests in those directories only. Otherwise, execute
tests in default directories.

    default directories: ( "t/stage0" ).

    <DIRS>      A list of test directories to execute
    --help      Show this help message
:>>
    , [program_name, program_name]);
    say(msg);
}

// Main function. Load in the libraries and run the test, catching errors.
function main[main](var args)
{
    var(Rosella.Parrot.try_report)(function() {
        string program_name = args.shift();
        if (elements(args) == 1 && args[0] == "--help")
            show_help(program_name);
        else
            harness_main(args);
    });
}

